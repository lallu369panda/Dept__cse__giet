name: Build and Test

o    - name: Install dependencies
      run: |
        rm -f package-lock.json
        npm install --legacy-peer-deps
      
    - name: Generate Prisma Client
      run: npx prisma generate
      env:
        DATABASE_URL: "file:./prisma/dev.db"
        
    - name: Run build
      run: npm run build
      env:
        NEXTAUTH_URL: "http://localhost:3000"
        NEXTAUTH_SECRET: "github-actions-build-secret-key-12345678901234567890"
        DATABASE_URL: "file:./prisma/dev.db"
        NODE_ENV: "production"
        
    - name: Build Success âœ…
      run: echo "âœ… Build completed successfully! Ready for deployment ðŸš€"anches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Clean npm cache
      run: npm cache clean --force
        
    - name: Install dependencies
      run: |
        rm -f package-lock.json
        npm install
      
    - name: Generate Prisma Client
      run: npx prisma generate
      
    - name: Set environment variables
      run: |
        echo "NEXTAUTH_URL=http://localhost:3000" >> $GITHUB_ENV
        echo "NEXTAUTH_SECRET=github-actions-build-secret-key-12345678901234567890" >> $GITHUB_ENV
        echo "DATABASE_URL=file:./prisma/dev.db" >> $GITHUB_ENV
        
    - name: Run build
      run: npm run build
        
    - name: Build Success âœ…
      run: echo "Build completed successfully! Ready for deployment ðŸš€"